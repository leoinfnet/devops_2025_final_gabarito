name: Deploy to prod
env:
  VERSAO: ${{ vars.IMAGE_VERSION }}
on:
  push:
    branches:
      - "main"
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
      - name: Usar vers√£o como env
        run: |
          echo "Vers√£o atual: $VERSAO"
      - name: Verificar vers√µes da JVM e Maven
        run: |
            java -version
            mvn -version
      - name: Limpar diretorio
        run: mvn clean
      - name: Executar Testes
        run: mvn test
      - name: Incrementar vers√£o (patch)
        id: increment-version
        run: |
          current=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Vers√£o atual: $current"
        
          IFS='.' read -r major minor patch <<< "$current"
          new_major=$((major + 1))
          next="$major.$minor.$((patch + 1))"
          echo "Nova vers√£o: $next"
        
          mvn versions:set -DnewVersion=$next
          echo "new_version=$next" >> "$GITHUB_OUTPUT"

      - name: Confirmar vers√£o ap√≥s incremento
        run: |
            echo "Nova vers√£o √©: ${{ steps.increment-version.outputs.new_version }}"

      - name: Build do projeto
        run: mvn package -DskipTests
      - name: Copiar artefato
        run: |
          cp target/*.jar docker/app.jar   
      - name: Docker Login
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USER }} --password-stdin
      - name: Incrementar e atualizar BUILD_VERSION
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_ADMIN }}
          VAR_NAME: "BUILD_VERSION"
          REPO: ${{ github.repository }}
        run: |          
          CURRENT_VERSION=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/$REPO/actions/variables/$IMAGE_VERSION| jq -r '.value')
          
          echo "üì¶ Vers√£o atual: $CURRENT_VERSION"
          
          # Extrai MAJOR, MINOR, PATCH
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          # Incrementa MAJOR (voc√™ pode trocar pra MINOR ou PATCH se quiser)
          NEW_MAJOR=$((MAJOR + 1))
          NEW_VERSION="${NEW_MAJOR}.0.0"
          
          echo "üöÄ Nova vers√£o: $NEW_VERSION"
          
          # Atualiza vari√°vel no reposit√≥rio
          curl -X PATCH \
          -H "Authorization: Bearer $GH_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/$REPO/actions/variables/$VAR_NAME \
          -d "{\"name\":\"$IMAGE_VERSION\", \"value\":\"$NEW_VERSION\"}"
      - name: Build Docker image
        env:
          VERSAO: ${{ vars.IMAGE_VERSION }}
        run: docker build . -f docker/Dockerfile -t cervejaria:$VERSAO
      - name: TAG
        run: docker tag cervejaria:$VERSAO leogloriainfnet/cervejaria:$VERSAO
      - name: Push Image
        run: docker push leogloriainfnet/cervejaria:$VERSAO
        
    

